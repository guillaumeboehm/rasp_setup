# attaches to a session is one already exists
#new-session -n $HOST

# status bar
bind B set -g status

# https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
set-option -g status-style bg=colour235,fg=colour136

# default window title colors
set-window-option -g window-status-style fg=colour244,bg=default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-style fg=colour166,bg=default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-style fg=colour235 #base02
set-option -g pane-active-border-style fg=colour250 #base01

# pane active background
set-window-option -g window-active-style bg=terminal
set-window-option -g window-style bg=black #base01

# message text
set-option -g message-style bg=colour235,fg=colour166 #base02

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange
# clock
set-window-option -g clock-mode-colour green #green

set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 20
set -g status-right-length 60
set -g status-left '#[fg=green]session:#S #[fg=blue]save:#{continuum_status}'
set -g status-right '#[fg=green,bg=default,bright] #{cpu_fg_color}CPU:#{cpu_percentage} #{gpu_fg_color}GPU:#{gpu_percentage} #[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white,bg=default]%H:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window

bind -r C-Left previous-window
bind -r C-Right next-window
bind -r Up resize-pane -U
bind -r Down resize-pane -D
bind -r Left resize-pane -L
bind -r Right resize-pane -R
bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1

# Use current directory in new window/pane
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# respawn current pane on F5
bind -n F5 respawn-pane -k

# rename on F2
bind -n F2 command-prompt -I "rename-window "

# Start numbering at 1
set -g base-index 1

# increase scrollback buffer size
set -g history-limit 50000

# refresh 'status-left' and 'status-right' more often
set -g status-interval 5

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection
unbind p
bind p paste-buffer

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
set-window-option -g automatic-rename

#mouse scroll
setw -g mouse on

# color
set -g default-terminal "screen-256color"

# set zsh as default shell
set-option -g default-shell "/bin/zsh"

# copy to clipboard
bind C-y run-shell -b "tmux save-buffer - | xclip -selection clipboard" \; display-message "Copied to clipboard..."

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-cpu'

# Plugins settings
set -g @continuum-restore 'on' # last saved environment is restored when tmux is started
set -g @continuum-boot 'on' # automatically boots tmux session on start-up
set -g @continuum-save-interval '5' # automatially saves tmux session every 5min

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

#setenv -g SSH_AUTH_SOCK $HOME/.ssh/ssh_auth_sock
